package arm.node;

@:keep class NodeTree extends armory.logicnode.LogicTree {

	var functionNodes:Map<String, armory.logicnode.FunctionNode>;

	var functionOutputNodes:Map<String, armory.logicnode.FunctionOutputNode>;

	public function new() {
		super();
		this.functionNodes = new Map();
		this.functionOutputNodes = new Map();
		notifyOnAdd(add);
	}

	override public function add() {
		var _PlayAction_011 = new armory.logicnode.PlayActionNode(this);
		var _PlayAction_010 = new armory.logicnode.PlayActionNode(this);
		var _Merge = new armory.logicnode.MergeNode(this);
		var _Mouse = new armory.logicnode.MergedMouseNode(this);
		_Mouse.property0 = "Released";
		_Mouse.property1 = "left";
		_Mouse.addOutputs([_Merge]);
		_Mouse.addOutputs([new armory.logicnode.BooleanNode(this, false)]);
		_Merge.addInput(_Mouse, 0);
		var _Keyboard = new armory.logicnode.MergedKeyboardNode(this);
		_Keyboard.property0 = "Released";
		_Keyboard.property1 = "space";
		_Keyboard.addOutputs([_Merge]);
		_Keyboard.addOutputs([new armory.logicnode.BooleanNode(this, false)]);
		_Merge.addInput(_Keyboard, 0);
		var _PlaySound_001 = new armory.logicnode.PlaySoundRawNode(this);
		_PlaySound_001.property0 = "bow_shoot.wav";
		_PlaySound_001.addInput(_Merge, 0);
		var _Sleep_001 = new armory.logicnode.SleepNode(this);
		_Sleep_001.addInput(_PlaySound_001, 0);
		_Sleep_001.addInput(new armory.logicnode.FloatNode(this, 0.05000000074505806), 0);
		var _PlaySound_002 = new armory.logicnode.PlaySoundRawNode(this);
		_PlaySound_002.property0 = "bow_hit.wav";
		_PlaySound_002.addInput(_Sleep_001, 0);
		_PlaySound_002.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sleep_001.addOutputs([_PlaySound_002]);
		_PlaySound_001.addOutputs([_Sleep_001]);
		_Merge.addOutputs([_PlaySound_001, _PlayAction_010]);
		_PlayAction_010.addInput(_Merge, 0);
		_PlayAction_010.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_PlayAction_010.addInput(new armory.logicnode.StringNode(this, "archer_shoot"), 0);
		_PlayAction_010.addInput(new armory.logicnode.FloatNode(this, 0.10000000149011612), 0);
		var _RemoveObject = new armory.logicnode.RemoveObjectNode(this);
		_RemoveObject.addInput(_PlayAction_010, 0);
		_RemoveObject.addInput(new armory.logicnode.ObjectNode(this, "Arrow"), 0);
		var _SpawnObject_001 = new armory.logicnode.SpawnObjectNode(this);
		_SpawnObject_001.addInput(_RemoveObject, 0);
		_SpawnObject_001.addInput(new armory.logicnode.ObjectNode(this, "ArrowPhys"), 0);
		var _Transform = new armory.logicnode.TransformNode(this);
		var _SeparateTransform = new armory.logicnode.SeparateTransformNode(this);
		var _GetTransform = new armory.logicnode.GetTransformNode(this);
		var _Object = new armory.logicnode.ObjectNode(this);
		_Object.addInput(new armory.logicnode.ObjectNode(this, "Finger"), 0);
		_Object.addOutputs([_GetTransform]);
		_GetTransform.addInput(_Object, 0);
		_GetTransform.addOutputs([_SeparateTransform]);
		_SeparateTransform.addInput(_GetTransform, 0);
		_SeparateTransform.addOutputs([_Transform]);
		_SeparateTransform.addOutputs([_Transform]);
		_SeparateTransform.addOutputs([new armory.logicnode.VectorNode(this, 0.0, 0.0, 0.0)]);
		_Transform.addInput(_SeparateTransform, 0);
		_Transform.addInput(_SeparateTransform, 1);
		_Transform.addInput(new armory.logicnode.VectorNode(this, 1.0, 1.0, 1.0), 0);
		var _VectorFromTransform = new armory.logicnode.VectorFromTransformNode(this);
		_VectorFromTransform.property0 = "Up";
		_VectorFromTransform.addInput(_Transform, 0);
		var _VectorMath = new armory.logicnode.VectorMathNode(this);
		_VectorMath.property0 = "Multiply";
		_VectorMath.addInput(_VectorFromTransform, 0);
		_VectorMath.addInput(new armory.logicnode.VectorNode(this, 30.0, 30.0, 30.0), 0);
		var _ApplyImpulse = new armory.logicnode.ApplyImpulseNode(this);
		_ApplyImpulse.addInput(_SpawnObject_001, 0);
		_ApplyImpulse.addInput(_SpawnObject_001, 1);
		_ApplyImpulse.addInput(_VectorMath, 0);
		_ApplyImpulse.addOutputs([new armory.logicnode.NullNode(this)]);
		_VectorMath.addOutputs([_ApplyImpulse]);
		_VectorMath.addOutputs([new armory.logicnode.FloatNode(this, 0.0)]);
		_VectorFromTransform.addOutputs([_VectorMath]);
		_Transform.addOutputs([_SpawnObject_001, _VectorFromTransform]);
		_SpawnObject_001.addInput(_Transform, 0);
		_SpawnObject_001.addOutputs([_ApplyImpulse]);
		_SpawnObject_001.addOutputs([_ApplyImpulse]);
		_RemoveObject.addOutputs([_SpawnObject_001]);
		_PlayAction_010.addOutputs([_RemoveObject]);
		_PlayAction_010.addOutputs([_PlayAction_011]);
		_PlayAction_011.addInput(_PlayAction_010, 1);
		_PlayAction_011.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_PlayAction_011.addInput(new armory.logicnode.StringNode(this, "archer_idle"), 0);
		_PlayAction_011.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_PlayAction_011.addOutputs([new armory.logicnode.NullNode(this)]);
		_PlayAction_011.addOutputs([new armory.logicnode.NullNode(this)]);
		var _PlayAction_009 = new armory.logicnode.PlayActionNode(this);
		var _PlayAction_008 = new armory.logicnode.PlayActionNode(this);
		var _Merge_001 = new armory.logicnode.MergeNode(this);
		var _Mouse_001 = new armory.logicnode.MergedMouseNode(this);
		_Mouse_001.property0 = "Started";
		_Mouse_001.property1 = "left";
		_Mouse_001.addOutputs([_Merge_001]);
		_Mouse_001.addOutputs([new armory.logicnode.BooleanNode(this, false)]);
		_Merge_001.addInput(_Mouse_001, 0);
		var _Keyboard_001 = new armory.logicnode.MergedKeyboardNode(this);
		_Keyboard_001.property0 = "Started";
		_Keyboard_001.property1 = "space";
		_Keyboard_001.addOutputs([_Merge_001]);
		_Keyboard_001.addOutputs([new armory.logicnode.BooleanNode(this, false)]);
		_Merge_001.addInput(_Keyboard_001, 0);
		_Merge_001.addOutputs([_PlayAction_008]);
		_PlayAction_008.addInput(_Merge_001, 0);
		_PlayAction_008.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_PlayAction_008.addInput(new armory.logicnode.StringNode(this, "archer_draw"), 0);
		_PlayAction_008.addInput(new armory.logicnode.FloatNode(this, 0.10000000149011612), 0);
		_PlayAction_008.addOutputs([new armory.logicnode.NullNode(this)]);
		_PlayAction_008.addOutputs([_PlayAction_009]);
		_PlayAction_009.addInput(_PlayAction_008, 1);
		_PlayAction_009.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_PlayAction_009.addInput(new armory.logicnode.StringNode(this, "archer_aim"), 0);
		_PlayAction_009.addInput(new armory.logicnode.FloatNode(this, 0.0), 0);
		_PlayAction_009.addOutputs([new armory.logicnode.NullNode(this)]);
		_PlayAction_009.addOutputs([new armory.logicnode.NullNode(this)]);
		var _ScaleObject = new armory.logicnode.ScaleObjectNode(this);
		var _SetParentBone = new armory.logicnode.SetParentBoneNode(this);
		var _SpawnObject = new armory.logicnode.SpawnObjectNode(this);
		var _OnActionMarker = new armory.logicnode.OnActionMarkerNode(this);
		_OnActionMarker.addInput(new armory.logicnode.ObjectNode(this, ""), 0);
		_OnActionMarker.addInput(new armory.logicnode.StringNode(this, "draw_arrow"), 0);
		var _Sleep = new armory.logicnode.SleepNode(this);
		_Sleep.addInput(_OnActionMarker, 0);
		_Sleep.addInput(new armory.logicnode.FloatNode(this, 0.20000000298023224), 0);
		var _PlaySound = new armory.logicnode.PlaySoundRawNode(this);
		_PlaySound.property0 = "bow_draw.wav";
		_PlaySound.addInput(_Sleep, 0);
		_PlaySound.addOutputs([new armory.logicnode.NullNode(this)]);
		_Sleep.addOutputs([_PlaySound]);
		_OnActionMarker.addOutputs([_SpawnObject, _Sleep]);
		_SpawnObject.addInput(_OnActionMarker, 0);
		_SpawnObject.addInput(new armory.logicnode.ObjectNode(this, "Arrow"), 0);
		_SpawnObject.addInput(new armory.logicnode.NullNode(this), 0);
		_SpawnObject.addOutputs([_SetParentBone]);
		_SpawnObject.addOutputs([_SetParentBone, _ScaleObject]);
		_SetParentBone.addInput(_SpawnObject, 0);
		_SetParentBone.addInput(_SpawnObject, 1);
		_SetParentBone.addInput(new armory.logicnode.ObjectNode(this, "Armature"), 0);
		_SetParentBone.addInput(new armory.logicnode.StringNode(this, "mixamorig:RightHandIndex1"), 0);
		_SetParentBone.addOutputs([_ScaleObject]);
		_ScaleObject.addInput(_SetParentBone, 0);
		_ScaleObject.addInput(_SpawnObject, 0);
		_ScaleObject.addInput(new armory.logicnode.VectorNode(this, 100.0, 100.0, 100.0), 0);
		_ScaleObject.addOutputs([new armory.logicnode.NullNode(this)]);
		var _SetTimeScale = new armory.logicnode.SetTimeScaleNode(this);
		var _Keyboard_002 = new armory.logicnode.MergedKeyboardNode(this);
		_Keyboard_002.property0 = "Started";
		_Keyboard_002.property1 = "1";
		_Keyboard_002.addOutputs([_SetTimeScale]);
		_Keyboard_002.addOutputs([new armory.logicnode.BooleanNode(this, false)]);
		_SetTimeScale.addInput(_Keyboard_002, 0);
		_SetTimeScale.addInput(new armory.logicnode.FloatNode(this, 1.0), 0);
		_SetTimeScale.addOutputs([new armory.logicnode.NullNode(this)]);
		var _SetTimeScale_001 = new armory.logicnode.SetTimeScaleNode(this);
		var _Keyboard_003 = new armory.logicnode.MergedKeyboardNode(this);
		_Keyboard_003.property0 = "Started";
		_Keyboard_003.property1 = "2";
		_Keyboard_003.addOutputs([_SetTimeScale_001]);
		_Keyboard_003.addOutputs([new armory.logicnode.BooleanNode(this, false)]);
		_SetTimeScale_001.addInput(_Keyboard_003, 0);
		_SetTimeScale_001.addInput(new armory.logicnode.FloatNode(this, 0.20000000298023224), 0);
		_SetTimeScale_001.addOutputs([new armory.logicnode.NullNode(this)]);
	}
}